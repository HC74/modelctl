{{- $packageName := .Package}}{{ $dbName := .DbName}}{{ $user := .User}}{{ $password := .Password -}}
{{- $host := .Host }}{{ $now := .Now }}{{ $dbType := .DbType -}}
{{"// Package "}}{{$packageName}}{{"This model file is automatically generated in "}}{{$now}}{{" and can be edited at will, and it will not be overwritten when it is generated again"}}
package {{$packageName}}
import (
    "fmt"
    "gorm.io/driver/mysql"
    "gorm.io/gorm"
    "time"
)

var DB_{{- $dbType }} *gorm.DB

func Setup() {
    var (
        dbName, user, password, host, dsn string
        err                               error
    )
    // TODO If you are using configuration, you need to trouble you to manually modify it
    dbName = "{{$dbName}}"
    user = "{{$user}}"
    password = "{{$password}}"
    host = "{{$host}}"

    dsn = fmt.Sprintf("%s:%s@tcp(%s)/%s?charset=utf8&parseTime=True&loc=Local", user, password, host, dbName)

    DB_{{- $dbType }}, err = gorm.Open(mysql.New(mysql.Config{
        DSN:                       dsn,   // DSN data source name
        DefaultStringSize:         256,   // string 类型字段的默认长度
        DisableDatetimePrecision:  true,  // 禁用 datetime 精度，MySQL 5.6 之前的数据库不支持
        DontSupportRenameIndex:    true,  // 重命名索引时采用删除并新建的方式，MySQL 5.7 之前的数据库和 MariaDB 不支持重命名索引
        DontSupportRenameColumn:   true,  // 重命名列，MySQL 8 之前的数据库和 MariaDB 不支持重命名列
        SkipInitializeWithVersion: false, // 根据当前 MySQL 版本自动配置
    }), &gorm.Config{
        // TODO Maybe you need to add some configuration
    })
    sqlDB, _ := DB_{{- $dbType }}.DB()
    if err != nil {
        // TODO Or if you don't know how to handle this error
    }
    sqlDB.SetMaxIdleConns(10)
    sqlDB.SetMaxOpenConns(100)
    sqlDB.SetConnMaxLifetime(10 * time.Minute)
    //DB_{{- $dbType }}.Callback().Create().Before("gorm:create").Register("update_created_at", createdCallBack)
    //DB_{{- $dbType }}.Callback().Update().Before("gorm:update").Register("update_modified_at", updateCallBack)

}

//func createdCallBack(tx *gorm.DB) {
// // TODO Perhaps you want to do something when you create
//}
//
//func updateCallBack(tx *gorm.DB) {
// // TODO Maybe you want to do something when modifying
//}